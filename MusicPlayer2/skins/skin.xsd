<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="https://github.com/zhongyang219/MusicPlayer2/skin" xmlns="https://github.com/zhongyang219/MusicPlayer2/skin" elementFormDefault="qualified">
    <xs:simpleType name="number_or_percent"><!--定义值类型 number_or_percent-->
        <xs:union><!--值必须符合下列类型种的某一种-->
            <xs:simpleType>
                <xs:restriction base="xs:int"></xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="[0-9]*%"></xs:pattern><!--匹配百分数-->
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="font_size">
      <xs:restriction base="xs:int">
        <!--只允许8~16的整数-->
        <xs:minInclusive value = "8"/>
        <xs:maxInclusive value = "16"/>
      </xs:restriction>
    </xs:simpleType>
    <xs:attributeGroup name="sharedattr"><!--定义属性组 sharedattr-->
        <xs:attribute name="x" type="number_or_percent">
            <xs:annotation>
                <xs:documentation>
                    x和y属性用于设置元素左上角的位置。如果元素的父元素是verticalLayout或horizontalLayout，则x和y属性无效。x和y属性用于设置元素基于整个界面的绝对位置，与父元素的位置无关。如果要设置元素基于其父元素的相对位置，请使用margin,margin-left,margin-top属性。
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="y" type="number_or_percent">
            <xs:annotation>
                <xs:documentation>
                    x和y属性用于设置元素左上角的位置。如果元素的父元素是verticalLayout或horizontalLayout，则x和y属性无效。x和y属性用于设置元素基于整个界面的绝对位置，与父元素的位置无关。如果要设置元素基于其父元素的相对位置，请使用margin,margin-left,margin-top属性。
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="width" type="number_or_percent">
            <xs:annotation>
                <xs:documentation>
                    width属性用于设置元素的宽度。父元素为布局容器时未设定子元素等分空闲空间，指定分配比例请使用proportion属性。
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="height" type="number_or_percent">
            <xs:annotation>
                <xs:documentation>
                    height属性用于设置元素的高度。父元素为布局容器时未设定子元素等分空闲空间，指定分配比例请使用proportion属性。
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="proportion">
            <xs:annotation>
                <xs:documentation>
                    父元素为布局元素时有效，指定与其他非固定尺寸子元素分配空闲空间时的比例，在对应布局容器中优先级高于width或height。
                </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:int">
                    <xs:minInclusive value="1"></xs:minInclusive>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="max-width" type="number_or_percent">
            <xs:annotation>
                <xs:documentation>用于设置元素的最大宽度。值可以是固定的数值或百分比。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="max-height" type="number_or_percent">
            <xs:annotation>
                <xs:documentation>用于设置元素的最大高度。值可以是固定的数值或百分比。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="min-width" type="number_or_percent">
            <xs:annotation>
                <xs:documentation>用于设置元素的最小宽度。值可以是固定的数值或百分比。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="min-height" type="number_or_percent">
            <xs:annotation>
                <xs:documentation>用于设置元素的最小高度。值可以是固定的数值或百分比。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="margin" type="number_or_percent">
            <xs:annotation>
                <xs:documentation>用于设置元素的四个方向的边距。值可以是固定的数值或百分比。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="margin-left" type="number_or_percent">
            <xs:annotation>
                <xs:documentation>用于设置元素的左边距。值可以是固定的数值或百分比。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="margin-right" type="number_or_percent">
            <xs:annotation>
                <xs:documentation>用于设置元素的右边距。值可以是固定的数值或百分比。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="margin-top" type="number_or_percent">
            <xs:annotation>
                <xs:documentation>用于设置元素的上边距。值可以是固定的数值或百分比。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="margin-bottom" type="number_or_percent">
            <xs:annotation>
                <xs:documentation>用于设置元素的下边距。值可以是固定的数值或百分比。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="hide-width" type="number_or_percent">
            <xs:annotation>
                <xs:documentation>当父元素宽度小于此值时隐藏。值可以是固定的数值或百分比。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="hide-height" type="number_or_percent">
            <xs:annotation>
                <xs:documentation>当父元素高度小于此值时隐藏。值可以是固定的数值或百分比。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>
    <xs:attributeGroup name="listattr">
      <xs:attribute name="item_height" type="xs:int">
        <xs:annotation>
          <xs:documentation>列表项目的高度。</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="font_size" default="9" type="font_size">
        <xs:annotation>
          <xs:documentation>字体大小，仅支持8~16。默认大小为9。</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:attributeGroup>
    <xs:group name="elements">
      <xs:sequence><!--sequence 和 choice 配合使用，使得元素可以以任意顺序出现任意次数-->
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element name="element" type="elementType"></xs:element>
          <xs:element name="verticalLayout" type="verticalLayoutType"></xs:element>
          <xs:element name="horizontalLayout" type="horizontalLayoutType"></xs:element>
          <xs:element name="stackElement" type="stackElementType"></xs:element>
          <xs:element name="rectangle" type="rectangleType"></xs:element>
          <xs:element name="button" type="buttonType"></xs:element>
          <xs:element name="text" type="textType"></xs:element>
          <xs:element name="albumCover" type="albumCoverType"></xs:element>
          <xs:element name="spectrum" type="spectrumType"></xs:element>
          <xs:element name="trackInfo" type="trackInfoType"></xs:element>
          <xs:element name="toolbar" type="toolbarType"></xs:element>
          <xs:element name="progressBar" type="progressBarType"></xs:element>
          <xs:element name="lyrics" type="lyricsType"></xs:element>
          <xs:element name="volume" type="volumeType"></xs:element>
          <xs:element name="beatIndicator" type="beatIndicatorType"></xs:element>
          <xs:element name="placeHolder" type="placeHolderType"></xs:element>
          <xs:element name="playlist" type="playlistType"></xs:element>
          <xs:element name="recentPlayedList" type="recentPlayedListType"></xs:element>
          <xs:element name="playlistIndicator" type="playlistIndicatorType"></xs:element>
          <xs:element name="mediaLibItemList" type="mediaLibItemListType"></xs:element>
          <xs:element name="mediaLibFolder" type="mediaLibFolderType"></xs:element>
          <xs:element name="mediaLibPlaylist" type="mediaLibPlaylistType"></xs:element>
          <xs:element name="myFavouriteList" type="myFavouriteListType"></xs:element>
          <xs:element name="navigationBar" type="navigationBarType"></xs:element>
          <xs:element name="miniSpectrum" type="miniSpectrumType"></xs:element>
          <xs:element name="allTracksList" type="allTracksListType"></xs:element>
          <xs:element name="classicalControlBar" type="classicalControlBarType"></xs:element>
          <xs:element name="medialibFolderExplore" type="medialibFolderExploreType"></xs:element>
          <xs:element name="searchBox" type="searchBoxType"></xs:element>
        </xs:choice>
      </xs:sequence>
    </xs:group>
    <xs:element name="root"><!--定义root元素信息-->
        <xs:annotation>
            <xs:documentation>根节点</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence><!--所有元素必须按顺序出现-->
                <!--定义名称为ui的元素，种类为uitype，应该出现1-无限大次-->
                <xs:element name="ui" type="uitype" minOccurs="1" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>
                            界面。一个xml文件可以包含多个界面，分别为不同大小时切换。
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="name" type="xs:string"><!--root元素可以有name属性-->
                <xs:annotation>
                    <xs:documentation>
                        此界面的名称，会显示到”切换界面“子菜单中。如果未定义此属性，则会使用默认的名称“界面+序号”。
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="index" type="xs:int">
                <xs:annotation>
                    <xs:documentation>
                        界面的序号，至少为3。序号不能与其他界面重复。未定义此属性的界面总是排在后面。
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attributeGroup ref="sharedattr"></xs:attributeGroup><!--引用属性组 sharedattr-->
        </xs:complexType>
    </xs:element>
    <xs:complexType name="uitype"><!--定义元素种类 uitype-->
        <xs:group ref="elements"></xs:group>
        <xs:attribute name="type"><!--定义type属性-->
            <xs:annotation>
                <xs:documentation>界面类型。</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:string"><!--type属性必须是以下值-->
                    <xs:enumeration value="big">
                        <xs:annotation>
                            <xs:documentation>界面宽度和高度大于一定值时的界面。</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="narrow">
                        <xs:annotation>
                            <xs:documentation>界面宽度小于一定值时的界面。</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="small">
                        <xs:annotation>
                            <xs:documentation>界面宽度和高度都小于一定值时的界面。</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attributeGroup ref="sharedattr"></xs:attributeGroup><!--引用属性组 sharedattr-->
    </xs:complexType>
    <xs:complexType name="elementType">
      <xs:annotation>
        <xs:documentation>一个空白的元素，不绘制任何东西，可用于作为其他元素的父节点。</xs:documentation>
      </xs:annotation>
      <xs:group ref="elements"></xs:group>
      <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    </xs:complexType>
  <xs:complexType name="verticalLayoutType">
        <xs:annotation>
            <xs:documentation>垂直布局元素。让界面元素依次摆放到界面中，且不会发生重叠的现象。</xs:documentation>
        </xs:annotation>
        <xs:group ref="elements"></xs:group>
        <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    </xs:complexType>
    <xs:complexType name="horizontalLayoutType">
        <xs:annotation>
            <xs:documentation>水平布局元素。让界面元素依次摆放到界面中，且不会发生重叠的现象。</xs:documentation>
        </xs:annotation>
        <xs:group ref="elements"></xs:group>
        <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    </xs:complexType>
    <xs:complexType name="stackElementType">
      <xs:annotation>
        <xs:documentation>堆叠元素，可包含多个子元素，其所有子元素中只显示其中一个。</xs:documentation>
      </xs:annotation>
      <xs:group ref="elements"></xs:group>
      <xs:attribute name="click_to_switch" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>如果为true，则可以通过单击切换显示。</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="scroll_to_switch" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>如果为true，则可以通过鼠标滚轮切换显示。</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="hover_to_switch" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>如果为true，则可以鼠标指向时会显示下一个界面，鼠标移开时恢复。</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="show_indicator" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>如果为true，则会在下方显示一个由小圆点组成的切换指示器，点击可以切换显示。</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="indicator_offset" type="xs:int">
        <xs:annotation>
          <xs:documentation>指示器垂直方向的偏移量。</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    </xs:complexType>
    <xs:complexType name="rectangleType">
        <xs:annotation>
            <xs:documentation>一个半透明的矩形。</xs:documentation>
        </xs:annotation>
        <xs:group ref="elements"></xs:group>
        <xs:attribute name="no_corner_radius" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>如果为true，则矩形总是为直角；如果为false，则在“选项”——“外观设置”中勾选“使用圆角风格按钮”时，矩形显示为圆角矩形。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="theme_color" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>矩形颜色是否使用主题颜色</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="color_mode" default="auto">
          <xs:annotation>
              <xs:documentation>矩形的颜色模式。</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
              <xs:restriction base="xs:string">
                  <xs:enumeration value="auto">
                      <xs:annotation>
                          <xs:documentation>自动适应界面深浅色主题。</xs:documentation>
                      </xs:annotation>
                  </xs:enumeration>
                  <xs:enumeration value="dark">
                      <xs:annotation>
                          <xs:documentation>深色</xs:documentation>
                      </xs:annotation>
                  </xs:enumeration>
                  <xs:enumeration value="light">
                      <xs:annotation>
                          <xs:documentation>浅色</xs:documentation>
                      </xs:annotation>
                  </xs:enumeration>
              </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    </xs:complexType>
    <xs:complexType name="buttonType">
      <xs:annotation>
        <xs:documentation>按钮</xs:documentation>
      </xs:annotation>
      <xs:group ref="elements"></xs:group>
      <xs:attribute name="key" use="required">
        <xs:annotation>
          <xs:documentation>
            按钮的类型。不支持在一个界面中放置两个以上相同的按钮，否则会导致只有其中一个按钮有效。
          </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="menu">
              <xs:annotation>
                <xs:documentation>菜单</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="miniMode">
              <xs:annotation>
                <xs:documentation>迷你模式</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="miniModeClose">
              <xs:annotation>
                 <xs:documentation>迷你模式界面中使用的关闭按钮</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fullScreen">
              <xs:annotation>
                <xs:documentation>全屏模式</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="repeatMode">
              <xs:annotation>
                <xs:documentation>循环模式</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="settings">
              <xs:annotation>
                <xs:documentation>设置</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="equalizer">
              <xs:annotation>
                <xs:documentation>均衡器</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="skin">
              <xs:annotation>
                <xs:documentation>切换界面</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="info">
              <xs:annotation>
                <xs:documentation>曲目信息</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="find">
              <xs:annotation>
                <xs:documentation>查找</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="abRepeat">
              <xs:annotation>
                <xs:documentation>AB重复</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="desktopLyric">
              <xs:annotation>
                <xs:documentation>显示桌面歌词</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="lyricTranslate">
              <xs:annotation>
                <xs:documentation>显示歌词翻译</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="stop">
              <xs:annotation>
                <xs:documentation>停止</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="previous">
              <xs:annotation>
                <xs:documentation>上一曲</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="next">
              <xs:annotation>
                <xs:documentation>下一曲</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="playPause">
              <xs:annotation>
                <xs:documentation>播放/暂停</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="favorite">
              <xs:annotation>
                <xs:documentation>添加到“我喜欢的音乐”</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mediaLib">
              <xs:annotation>
                <xs:documentation>媒体库</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="showPlaylist">
              <xs:annotation>
                <xs:documentation>显示/隐藏播放列表</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="addToPlaylist">
              <xs:annotation>
                <xs:documentation>添加到播放列表</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="switchDisplay">
              <xs:annotation>
                <xs:documentation>切换界面中stackElement元素的显示。如果界面中有多个stackElement元素，则点击此按钮会切换第一个stackElement元素的显示。</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="darkLightMode">
              <xs:annotation>
                <xs:documentation>在深色模式和浅色模式之间切换。</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="locateTrack">
              <xs:annotation>
                <xs:documentation>播放列表定位到正在播放的曲目。</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="openFolder">
              <xs:annotation>
                <xs:documentation>打开文件夹。</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="newPlaylist">
              <xs:annotation>
                <xs:documentation>新建播放列表。</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="playMyFavourite">
              <xs:annotation>
                <xs:documentation>播放“我喜欢的音乐”。</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="medialibFolderSort">
              <xs:annotation>
                <xs:documentation>媒体库“文件夹”排序方式。</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="medialibPlaylistSort">
              <xs:annotation>
                <xs:documentation>媒体库“播放列表”排序方式。</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="karaoke">
              <xs:annotation>
                <xs:documentation>歌词卡拉OK效果显示。</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="bigIcon" type="xs:boolean" default="false">
          <xs:annotation>
              <xs:documentation>如果为false，则图标尺寸为16x16；如果为true，则图标尺寸为20x20</xs:documentation>
          </xs:annotation>
      </xs:attribute>
      <xs:attribute name="show_text" type="xs:boolean" default="false">
        <xs:annotation>
          <xs:documentation>是否显示文本</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="font_size" default="9" type="font_size">
        <xs:annotation>
          <xs:documentation>字体大小，use_default_font为true时有效，仅支持8~16。默认大小为9。</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    </xs:complexType>
    <xs:complexType name="textType">
        <xs:annotation>
            <xs:documentation>文本</xs:documentation>
        </xs:annotation>
        <xs:group ref="elements"></xs:group>
        <xs:attribute name="text" type="xs:string">
            <xs:annotation>
                <xs:documentation>显示的文本。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="alignment" default="left">
            <xs:annotation>
                <xs:documentation>对齐方式。</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="left">
                        <xs:annotation>
                            <xs:documentation>左对齐</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="right">
                        <xs:annotation>
                            <xs:documentation>右对齐</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="center">
                        <xs:annotation>
                            <xs:documentation>居中</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="style" default="static">
            <xs:annotation>
                <xs:documentation>文本的样式。</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="static">
                        <xs:annotation>
                            <xs:documentation>静止的文本</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="scroll">
                        <xs:annotation>
                            <xs:documentation>滚动的文本</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="scroll2">
                        <xs:annotation>
                            <xs:documentation>另一种滚动的文本（只朝一个方向滚动）</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="type" default="userDefine">
            <xs:annotation>
                <xs:documentation>文本的类型。</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="userDefine">
                        <xs:annotation>
                            <xs:documentation>显示的文本由text属性的值决定</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="title">
                        <xs:annotation>
                            <xs:documentation>显示歌曲标题</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="artist">
                        <xs:annotation>
                            <xs:documentation>显示歌曲艺术家</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="album">
                        <xs:annotation>
                            <xs:documentation>显示歌曲唱片集</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="artist_title">
                        <xs:annotation>
                            <xs:documentation>显示为“艺术家 - 标题”</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="artist_album">
                        <xs:annotation>
                            <xs:documentation>显示为“艺术家 - 唱片集”</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="format">
                        <xs:annotation>
                            <xs:documentation>显示歌曲格式</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="play_time">
                        <xs:annotation>
                            <xs:documentation>播放时间</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="play_time_and_volume">
                        <xs:annotation>
                            <xs:documentation>显示播放时间，如果正在调整音量，会显示当前音量，一段时间后恢复。</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="font_size" default="9" type="font_size">
            <xs:annotation>
                <xs:documentation>字体大小，仅支持8~16。默认大小为9。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="width_follow_text" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>元素宽度是否跟随文字宽度，即当设定宽度大于文字宽度时收缩到文字宽度。优先级低于元素宽度最值设定。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="color_mode" default="auto">
          <xs:annotation>
              <xs:documentation>文本的颜色模式。</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
              <xs:restriction base="xs:string">
                  <xs:enumeration value="auto">
                      <xs:annotation>
                          <xs:documentation>自动适应界面深浅色主题。</xs:documentation>
                      </xs:annotation>
                  </xs:enumeration>
                  <xs:enumeration value="dark">
                      <xs:annotation>
                          <xs:documentation>深色</xs:documentation>
                      </xs:annotation>
                  </xs:enumeration>
                  <xs:enumeration value="light">
                      <xs:annotation>
                          <xs:documentation>浅色</xs:documentation>
                      </xs:annotation>
                  </xs:enumeration>
              </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    </xs:complexType>
    <xs:complexType name="albumCoverType">
        <xs:annotation>
            <xs:documentation>专辑封面</xs:documentation>
        </xs:annotation>
        <xs:group ref="elements"></xs:group>
        <xs:attribute name="square" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>如果为true，则总是使用正方形的专辑封面。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="show_info" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>是否在专辑封面上显示歌曲标题和艺术家。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    </xs:complexType>
    <xs:complexType name="spectrumType">
        <xs:annotation>
            <xs:documentation>频谱分析</xs:documentation>
        </xs:annotation>
        <xs:group ref="elements"></xs:group>
        <xs:attribute name="draw_reflex" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>是否绘制倒影。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="fixed_width" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>每个柱形是否使用相同的宽度。如果为ture，则频谱分析的宽度将始终保持不变。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="type" default="64col">
            <xs:annotation>
                <xs:documentation>频谱分析的类型（柱形数量）</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="64col"></xs:enumeration>
                    <xs:enumeration value="32col"></xs:enumeration>
                    <xs:enumeration value="16col"></xs:enumeration>
                    <xs:enumeration value="8col"></xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="alignment" default="left">
          <xs:annotation>
            <xs:documentation>对齐方式。</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="left">
                <xs:annotation>
                  <xs:documentation>左对齐</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="right">
                <xs:annotation>
                  <xs:documentation>右对齐</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="center">
                <xs:annotation>
                  <xs:documentation>居中</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    </xs:complexType>
    <xs:complexType name="trackInfoType">
      <xs:annotation>
        <xs:documentation>曲目信息（包含播放状态、文件名、歌曲标识、速度）</xs:documentation>
      </xs:annotation>
      <xs:group ref="elements"></xs:group>
      <xs:attribute name="font_size" default="9" type="font_size">
        <xs:annotation>
          <xs:documentation>字体大小，仅支持8~16。默认大小为9。</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    </xs:complexType>
    <xs:complexType name="toolbarType">
        <xs:annotation>
            <xs:documentation>工具条</xs:documentation>
        </xs:annotation>
        <xs:group ref="elements"></xs:group>
        <xs:attribute name="show_translate_btn" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>是否在工具栏上显示“显示歌词翻译”按钮。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    </xs:complexType>
    <xs:complexType name="progressBarType">
        <xs:annotation>
            <xs:documentation>进度条</xs:documentation>
        </xs:annotation>
        <xs:group ref="elements"></xs:group>
        <xs:attribute name="show_play_time" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>是否在进度条右边显示播放时间。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="play_time_both_side" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>播放时间是否显示在进度条的两侧。仅当show_play_time为true时有效。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    </xs:complexType>
    <xs:complexType name="lyricsType">
      <xs:annotation>
        <xs:documentation>
            显示歌词的区域。歌词的显示会自动根据歌词区域的大小切换单行、双行、多行显示模式。在此区域点击鼠标右键会弹出歌词右键菜单。
        </xs:documentation>
      </xs:annotation>
      <xs:group ref="elements"></xs:group>
        <xs:attribute name="no_background" type="xs:boolean" default="false">
          <xs:annotation>
              <xs:documentation>设置为true时总是不绘制歌词背景</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="use_default_font" type="xs:boolean" default="false">
          <xs:annotation>
             <xs:documentation>设置为true时歌词总是使用默认字体</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="font_size" default="9" type="font_size">
          <xs:annotation>
            <xs:documentation>歌词字体大小，use_default_font为true时有效，仅支持8~16。默认大小为9。</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="show_song_info" type="xs:boolean" default="false">
          <xs:annotation>
            <xs:documentation>设置为true时总是在没有歌词时显示歌曲信息</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    </xs:complexType>
    <xs:complexType name="volumeType">
        <xs:annotation>
            <xs:documentation>音量按钮，点击后会弹出音量调节按钮</xs:documentation>
        </xs:annotation>
        <xs:group ref="elements"></xs:group>
        <xs:attribute name="show_text" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>是否在音量图标旁边显示文本。</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="adj_btn_on_top" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>
                    点击音量图标后出现的音量调节按钮是否显示在音量图标的上方。默认显示在音量图标的下方。
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    </xs:complexType>
    <xs:complexType name="beatIndicatorType">
        <xs:annotation>
            <xs:documentation>一个由&lt;&lt;&lt;&lt;组成的节拍指示。它仅在播放Midi音乐时才会指示正确的节拍。</xs:documentation>
        </xs:annotation>
        <xs:group ref="elements"></xs:group>
        <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    </xs:complexType>
    <xs:complexType name="classicalControlBarType">
        <xs:annotation>
            <xs:documentation>一个由包含进度条，以及停止、上一曲、播放/暂停、下一曲、收藏、媒体库、播放列表按钮的播放控制栏。</xs:documentation>
        </xs:annotation>
        <xs:group ref="elements"></xs:group>
    <xs:attribute name="show_switch_display_btn" type="xs:boolean" default="false">
      <xs:annotation>
        <xs:documentation>是否显示“切换界面”按钮。</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    </xs:complexType>
    <xs:complexType name="placeHolderType">
      <xs:annotation>
          <xs:documentation>placeHolder元素是一个占位符，它不显示任何东西。</xs:documentation>
      </xs:annotation>
      <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
      <xs:attribute name="show_when_use_system_titlebar" type="xs:boolean" default="false">
        <xs:annotation>
          <xs:documentation>如果为true，则仅当开启“使用系统标准标题栏”时才显示。默认为false。</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
    <xs:complexType name="playlistType">
      <xs:annotation>
        <xs:documentation>播放列表。</xs:documentation>
      </xs:annotation>
      <xs:group ref="elements"></xs:group>
      <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
      <xs:attributeGroup ref="listattr"></xs:attributeGroup>
    </xs:complexType>
    <xs:complexType name="playlistIndicatorType">
      <xs:annotation>
        <xs:documentation>指示当前播放列表和一个下拉按钮。</xs:documentation>
      </xs:annotation>
      <xs:group ref="elements"></xs:group>
      <xs:attribute name="font_size" default="9" type="font_size">
        <xs:annotation>
          <xs:documentation>字体大小，仅支持8~16。默认大小为9。</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    </xs:complexType>
    <xs:complexType name="recentPlayedListType">
      <xs:annotation>
        <xs:documentation>最近播放项目的列表。</xs:documentation>
      </xs:annotation>
      <xs:group ref="elements"></xs:group>
      <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
      <xs:attributeGroup ref="listattr"></xs:attributeGroup>
    </xs:complexType>
    <xs:complexType name="mediaLibItemListType">
      <xs:annotation>
        <xs:documentation>媒体库项目列表。</xs:documentation>
      </xs:annotation>
      <xs:group ref="elements"></xs:group>
      <xs:attribute name="type">
        <xs:annotation>
          <xs:documentation>类型。</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="artist">
              <xs:annotation>
                <xs:documentation>艺术家</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="album">
              <xs:annotation>
                <xs:documentation>唱片集</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="genre">
              <xs:annotation>
                <xs:documentation>流派</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="year">
              <xs:annotation>
                <xs:documentation>年份</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="file_type">
              <xs:annotation>
                <xs:documentation>文件类型</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bitrate">
              <xs:annotation>
                <xs:documentation>比特率</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="rating">
              <xs:annotation>
                <xs:documentation>分级</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
      <xs:attributeGroup ref="listattr"></xs:attributeGroup>
    </xs:complexType>
    <xs:complexType name="navigationBarType">
      <xs:annotation>
        <xs:documentation>导航栏。用于控制stackElement的切换，依次向上在它的所有父节点下面查找stackElement，如果未找到，则作用于ui元素下第一个stackElement。</xs:documentation>
      </xs:annotation>
      <xs:group ref="elements"></xs:group>
      <xs:attribute name="item_list">
        <xs:annotation>
          <xs:documentation>标签列表，标签只能在“album_cover,spectrum,lyrics,now_playing,play_queue,recently_played,folder,playlist,artist,album,genre,year,file_type,bitrate,rating,media_lib,my_favourite,all_tracks,folder_explore”中选，多个标签使用半角逗号隔开。</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base = "xs:string">
            <xs:pattern value = "^(album_cover|spectrum|lyrics|now_playing|play_queue|recently_played|folder|playlist|artist|album|genre|year|file_type|bitrate|rating|media_lib|my_favourite|all_tracks|folder_explore)(,(album_cover|spectrum|lyrics|now_playing|play_queue|recently_played|folder|playlist|artist|album|genre|year|file_type|bitrate|rating|media_lib|my_favourite|all_tracks|folder_explore))*$"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="icon_type" default="icon_and_text">
        <xs:annotation>
          <xs:documentation>图标类型。</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="icon_and_text">
              <xs:annotation>
                <xs:documentation>图标和文本</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="icon_only">
              <xs:annotation>
                <xs:documentation>仅图标</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="text_only">
              <xs:annotation>
                <xs:documentation>仅文本</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="orientation" default="horizontal">
        <xs:annotation>
          <xs:documentation>排列方向。</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="horizontal">
              <xs:annotation>
                <xs:documentation>水平排列</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="vertical">
              <xs:annotation>
                <xs:documentation>垂直排列</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="item_space" type="xs:int">
        <xs:annotation>
          <xs:documentation>项目间距</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="item_height" type="xs:int">
        <xs:annotation>
          <xs:documentation>标签的高度。仅在垂直排列模式下起作用。</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="font_size" default="9" type="font_size">
        <xs:annotation>
          <xs:documentation>字体大小，仅支持8~16。默认大小为9。</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    </xs:complexType>
  <xs:complexType name="mediaLibFolderType">
    <xs:annotation>
      <xs:documentation>媒体库的文件夹。</xs:documentation>
    </xs:annotation>
    <xs:group ref="elements"></xs:group>
    <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    <xs:attributeGroup ref="listattr"></xs:attributeGroup>
  </xs:complexType>
  <xs:complexType name="mediaLibPlaylistType">
    <xs:annotation>
      <xs:documentation>媒体库的播放列表。</xs:documentation>
    </xs:annotation>
    <xs:group ref="elements"></xs:group>
    <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    <xs:attributeGroup ref="listattr"></xs:attributeGroup>
  </xs:complexType>
  <xs:complexType name="myFavouriteListType">
    <xs:annotation>
      <xs:documentation>我喜欢的音乐列表。</xs:documentation>
    </xs:annotation>
    <xs:group ref="elements"></xs:group>
    <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    <xs:attributeGroup ref="listattr"></xs:attributeGroup>
  </xs:complexType>
  <xs:complexType name="allTracksListType">
    <xs:annotation>
      <xs:documentation>所有曲目列表。</xs:documentation>
    </xs:annotation>
    <xs:group ref="elements"></xs:group>
    <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    <xs:attributeGroup ref="listattr"></xs:attributeGroup>
  </xs:complexType>
  <xs:complexType name="miniSpectrumType">
    <xs:annotation>
      <xs:documentation>图标大小的频谱分析。</xs:documentation>
    </xs:annotation>
    <xs:group ref="elements"></xs:group>
    <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
  </xs:complexType>
  <xs:complexType name="medialibFolderExploreType">
    <xs:annotation>
      <xs:documentation>媒体库中的文件夹浏览。</xs:documentation>
    </xs:annotation>
    <xs:group ref="elements"></xs:group>
    <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
    <xs:attributeGroup ref="listattr"></xs:attributeGroup>
  </xs:complexType>
  <xs:complexType name="searchBoxType">
    <xs:annotation>
      <xs:documentation>搜索框。</xs:documentation>
    </xs:annotation>
    <xs:group ref="elements"></xs:group>
    <xs:attributeGroup ref="sharedattr"></xs:attributeGroup>
  </xs:complexType>
</xs:schema>
